{"version":3,"sources":["Compteur.js","App.js","reportWebVitals.js","index.js"],"names":["Compteur","Increment","setState","count","state","Decrement","console","log","interval","setInterval","this","clearInterval","onClick","React","Component","App","fullName","bio","imgSrc","profession","show","handleShow","className","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAmDeA,E,kDA/CX,aAAe,IAAD,8BACV,gBAQJC,UAAY,WACR,EAAKC,SAAS,CACVC,MAAO,EAAKC,MAAMD,MAAQ,KAXpB,EAedE,UAAY,WACR,EAAKH,SAAS,CACVC,MAAO,EAAKC,MAAMD,MAAQ,KAd9B,EAAKC,MAAQ,CACTD,MAAO,GAEXG,QAAQC,IAAI,eANF,E,qDAqBd,WAAqB,IAAD,OACVC,EAAWC,aAAY,WACzB,EAAKP,SAAS,CAAEC,MAAO,EAAKC,MAAMD,MAAQ,MAC3C,KAEHG,QAAQC,IAAI,oBAAoBC,K,gCAEpC,WACIF,QAAQC,IAAI,wB,kCAEhB,WACQG,KAAKN,MAAMD,MAAQ,IACnBQ,cAAcD,KAAKF,Y,oBAG3B,WAAU,IAAD,OACL,OACI,gCACI,wBAAQI,QAAS,kBAAM,EAAKX,aAA5B,eADJ,WAEaS,KAAKN,MAAMD,MACpB,wBAAQS,QAAS,kBAAM,EAAKP,aAA5B,sB,GA1COQ,IAAMC,WCwCdC,E,4MAtCbX,MAAQ,CACNY,SAAU,sBACVC,IAAK,wEACLC,OAAQ,6EACRC,WAAY,wCACZC,MAAM,G,EAGRC,WAAa,WACX,EAAKnB,SAAS,CACZkB,MAAO,EAAKhB,MAAMgB,Q,4CAItB,WACE,OACE,sBAAKE,UAAU,MAAf,UACGZ,KAAKN,MAAMgB,KACV,qCACE,6BAAKV,KAAKN,MAAMY,WAChB,6BAAKN,KAAKN,MAAMa,MAChB,qBAAKM,IAAKb,KAAKN,MAAMc,OAAQM,IAAI,WACjC,6BAAKd,KAAKN,MAAMe,gBAGlB,kDAGF,wBAAQP,QAASF,KAAKW,WAAtB,SAAoCX,KAAKN,MAAMgB,KAAgB,OAAT,SACtD,qCACA,gDACA,cAAC,EAAD,c,GAhCUP,IAAMC,WCQTW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3bcda6e.chunk.js","sourcesContent":["import React from \"react\";\n\n\nclass Compteur extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            count: 0\n        }\n        console.log(\"constructor\");\n    }\n\n    Increment = () => {\n        this.setState({\n            count: this.state.count + 1\n        })\n    }\n\n    Decrement = () => {\n        this.setState({\n            count: this.state.count - 1\n        })\n    }\n    \n    componentDidMount() {\n        const interval = setInterval(() => {\n            this.setState({ count: this.state.count + 1 })\n        }, 1000)\n        \n        console.log(\"componentDidMount\",interval);\n    }\n    componentDidUpdate() {\n        console.log(\"componentDidUpdate\")\n    }\n    componentWillUnmount() {\n        if (this.state.count < 10) {\n            clearInterval(this.interval);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <button onClick={() => this.Increment()}>+</button>\n                COUNT:  {this.state.count}\n                <button onClick={() => this.Decrement()}>-</button>\n            </div>\n        )\n    }\n}\n\nexport default Compteur;","import React from \"react\";\nimport './App.css';\nimport Compteur from \"./Compteur\";\n\nclass App extends React.Component {\n  state = {\n    fullName: 'GoMyCode CheckPoint',\n    bio: 'My name is Bouyahi zakaria . I am web development student at GoMyCode',\n    imgSrc: 'https://www.mojomedia.pro/wp-content/uploads/1_9npnpvh7inj64koq7ecw5a.jpeg',\n    profession: 'Stand Out program scholarship holder ',\n    show: false\n  }\n\n  handleShow = () => {\n    this.setState({\n      show: !this.state.show\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.show ? (\n          <>\n            <h1>{this.state.fullName}</h1>\n            <h1>{this.state.bio}</h1>\n            <img src={this.state.imgSrc} alt=\"failed\" />\n            <h1>{this.state.profession}</h1>\n          </>\n        ) : (\n          <h1>Show the profile</h1>\n        )\n        }\n        <button onClick={this.handleShow}>{!this.state.show ? \"show\" : \"hide\"}</button>\n        <>\n        <h1>Show the count</h1>\n        <Compteur />\n        </>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}